argo-cd:
  enabled: true

  configs:
    params:
      server:
        insecure: true
    cmp:
      create: true
      plugins:
        helmfile:
          version: v0.171.0
          init:
            command: [helmfile, --quiet]
            args:
              - init
              - --force
          discover:
            find:
              glob: "**/helmfile.yaml"
          generate:
            command: [helmfile, --quiet]
            args:
              - template
  repoServer:
    extraContainers:
      - name: helmfile
        image: ghcr.io/helmfile/helmfile:{{.Values.configs.cmp.plugins.helmfile.version}}
        command: ["/var/run/argocd/argocd-cmp-server"]
        env:
          - name: HELM_CACHE_HOME
            value: /tmp/helm/cache
          - name: HELM_CONFIG_HOME
            value: /tmp/helm/config
          - name: HELMFILE_CACHE_HOME
            value: /tmp/helmfile/cache
          - name: HELMFILE_TEMPDIR
            value: /tmp/helmfile/tmp
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /home/argocd/cmp-server/config/plugin.yaml
            subPath: helmfile.yaml
            name: argocd-cmp-cm
          - mountPath: /tmp
            name: helmfile-tmp
    volumes:
      - name: argocd-cmp-cm
        configMap:
          name: argocd-cmp-cm
      - name: helmfile-tmp
        emptyDir: {}
  server:
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: selfsigned
      tls: true
      ingressClassName: cilium

kubeplane:
  enabled: true

  manifests:
    appproject:
      apiVersion: argoproj.io/v1alpha1
      kind: AppProject
      metadata:
        name: &project kubeplane
      spec:
        clusterResourceWhitelist:
          - group: "*"
            kind: "*"
        destinations:
          - namespace: "{{.Release.Namespace}}-*"
            server: "*"
        sourceRepos:
          - &repo https://github.com/audacioustux/kubeplane.git
    applicationset:
      apiVersion: argoproj.io/v1alpha1
      kind: ApplicationSet
      metadata:
        name: *project
      spec:
        goTemplate: true
        goTemplateOptions: ["missingkey=error"]
        generators:
          - git:
              repoURL: *repo
              revision: &revision HEAD
              directories:
                - path: apps/*
        template:
          metadata:
            name: "{{.path.basename}}"
            annotations:
              argocd.argoproj.io/compare-options: ServerSideDiff=true,IncludeMutationWebhook=true
          spec:
            project: *project
            source:
              repoURL: *repo
              targetRevision: *revision
              path: "{{.path.path}}"
            destination:
              server: https://kubernetes.default.svc
              namespace: "{{.Release.Namespace}}-{{.path.basename}}"
            syncPolicy:
              syncOptions:
                - CreateNamespace=true
                - PruneLast=true
                - ApplyOutOfSyncOnly=true
                - ServerSideApply=true
                - FailOnSharedResource=true
              automated:
                prune: true
                selfHeal: true
